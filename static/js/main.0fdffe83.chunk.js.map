{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","yamlValue","setYamlValue","compiledYamlValue","setCompiledYamlValue","useEffect","compile","e","message","className","style","display","justifyContent","width","alignItems","mode","theme","onChange","name","editorProps","$blockScrolling","value","readOnly","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAyFeA,MA/Df,WAAgB,IAAD,EACqBC,mBAjBjB,yQAgBJ,mBACNC,EADM,KACKC,EADL,OAEqCF,mBAChD,aAHW,mBAENG,EAFM,KAEaC,EAFb,KAab,OAPAC,qBAAU,WACR,IACED,EAAqBE,kBAAQL,IAC7B,MAAOM,GACPH,EAAqBG,EAAEC,YAExB,CAACP,IAEF,qBAAKQ,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,2CAEE,4IAKF,sBACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,eAChBC,MAAO,OACPC,WAAY,UALhB,UAQE,wCAEE,cAAC,IAAD,CACEC,KAAK,OACLC,MAAM,SACNC,SAAUf,EACVgB,KAAK,YACLC,YAAa,CAAEC,iBAAiB,GAChCC,MAAOpB,OAGX,8BACE,cAAC,IAAD,MAEF,yCAEE,cAAC,IAAD,CACEqB,UAAU,EACVP,KAAK,OACLC,MAAM,SACNC,SAAU,aACVC,KAAK,aACLC,YAAa,CAAEC,iBAAiB,GAChCC,MAAOlB,gBC3ErBoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0fdffe83.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport AceEditor from \"react-ace\";\nimport { ImArrowRight } from \"react-icons/all\";\nimport { compile } from \"super-yaml\";\n\nimport \"ace-builds/src-noconflict/mode-yaml\";\nimport \"ace-builds/src-noconflict/mode-makefile\";\nimport \"ace-builds/src-noconflict/theme-chrome\";\n\nconst DEFAULT_VALUE = `\n_types:\n  MyCoolType:\n    properties:\n        names:\n            englishName: $name\n            britishName: $name\n        age: $age:25 # default value\nCoolExample1<MyCoolType>:\n  name: SuperYaml\nCoolExample2<MyCoolType>:\n  name: Syml\n  age: 27\n\n`;\n\nfunction App() {\n  const [yamlValue, setYamlValue] = useState<string>(DEFAULT_VALUE);\n  const [compiledYamlValue, setCompiledYamlValue] = useState<string>(\n    \"Loading..\"\n  );\n\n  useEffect(() => {\n    try {\n      setCompiledYamlValue(compile(yamlValue));\n    } catch (e) {\n      setCompiledYamlValue(e.message);\n    }\n  }, [yamlValue]);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Super-YAML\n          <p>\n            super-yaml is a tool that helps you write enhanced yaml's and\n            compile them to regular yaml `.yml` files.\n          </p>\n        </p>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            width: \"100%\",\n            alignItems: \"center\",\n          }}\n        >\n          <div>\n            Input\n            <AceEditor\n              mode=\"yaml\"\n              theme=\"chrome\"\n              onChange={setYamlValue}\n              name=\"yamlInput\"\n              editorProps={{ $blockScrolling: true }}\n              value={yamlValue}\n            />\n          </div>\n          <div>\n            <ImArrowRight />\n          </div>\n          <div>\n            Output\n            <AceEditor\n              readOnly={true}\n              mode=\"yaml\"\n              theme=\"chrome\"\n              onChange={() => {}}\n              name=\"yamlOutput\"\n              editorProps={{ $blockScrolling: true }}\n              value={compiledYamlValue}\n            />\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}